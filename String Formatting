nums = [4, 5, 6]
msg = "Numbers: {0} {1} {2}". format(nums[0], nums[1], nums[2])
#前面是转换后输出的格式模板，后面是格式模板中{0}，{1}，{2}对应的数组，format函数中用，隔开
print(msg)
>>>
Numbers: 4 5 6
>>>

print("{0}{1}{0}".format("abra", "cad"))
>>>
abracarabra
>>>

a = "{x}, {y}".format(x=5, y=12)
print(a)
5,12
#Each argument of the format function is placed in the string at the corresponding position, which is determined using the curly braces { }.

join - joins a list of strings with another string as a separator
1.print(", ".join(["spam", "eggs", "ham"]))
  #prints "spam, eggs, ham"
2.str = "-";
  seq = ("a", "b", "c"); # 字符串序列
  print str.join( seq );
  
replace - replaces one substring in a string with another.
1.print("Hello ME".replace("ME", "world"))
  #prints "Hello world"
2.str = "this is string example....wow!!! this is really string";
  print str.replace("is", "was");
  print str.replace("is", "was", 3); 
  thwas was string example....wow!!! thwas was really string  #替换字符串中的所有is，包括this中的is也会被替换 
  thwas was string example....wow!!! thwas is really string   #将is替换三次，就返回值
  
startswith and endswith - determine if there is a substring at the start and end of a string, respectively. 
1.print("This is a sentence.".startswith("This"))
  # prints "True"

2.print("This is a sentence.".endswith("sentence."))
  # prints "True
  
The method split is the opposite of join, turning a string with a certain separator into a list.
str.split(str="", num=string.count(str)).
str -- 分隔符，默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等。
num -- 分割次数
str = "Line1-abcdef \nLine2-abc \nLine4-abcd";
print str.split( );
print str.split(' ', 1 );
['Line1-abcdef', 'Line2-abc', 'Line4-abcd']
['Line1-abcdef', '\nLine2-abc \nLine4-abcd']

round:To round a number to a certain number of decimal places, use round 
round(1.111111,2) == 1.11

sum([1,2,3])   #必须将1，2，3放在数组中才能进行运算
sum(1,2，3)   #这样书写就会报错，提示int是不可迭代的

enumerate be used to iterate through the values and indices of a list simultaneously.
enumerate(sequence, [start=0])            #默认从0开始
>>>seasons = ['Spring', 'Summer', 'Fall', 'Winter']
>>> list(enumerate(seasons))
[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]
>>> list(enumerate(seasons, start=1))       # 小标从 1 开始
[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]

nums = [55, 44, 33, 22, 11]

all和any函数
if all([i > 5 for i in nums]):
   print("All larger than 5")         #所有的i都符合条件，才输出

if any([i % 2 == 0 for i in nums]):
   print("At least one is even")      #只要有一个符合条件，就会输出
   
for循环的时候出错，列子1为wrong，2为right：
def char_perc(char,lett):
    count=0
    for c in char:
        if c ==lett:
            count = count + 1
    perc=100*(count/len(char))
    print ('{0}-{1}%'.format(lett,round(perc,2)))
char_perc('123123asdasdasdsdasdasdasd',lett='2')  

def char_perc(char,lett):
    count=0
    for lett in char:            #这里lett是一个变量，一直在变化，知道取完char里面的所有值
        count = count + 1
    perc=100*(count/len(char))
    print ('{0}-{1}%'.format(lett,round(perc,2)))
char_perc('123123asdasdasdsdasdasdasd',lett='2')
